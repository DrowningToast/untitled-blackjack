
package UI.Gameplay;

import GameContext.GameContext;
import Internal.Websocket.Controller.WebsocketController;
import Main.MainRunner;
import Internal.UserInterface.CustomFrame;
import UI.Options.VolumeSetting;

import java.awt.*;

import java.awt.event.MouseEvent;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 * @author Suchanan
 */
public class GameplayDisplayGUI extends CustomFrame {
    public Object getDeckCardPanel;
    public GameplayController controller;
    public WebsocketController wsController;


    public GameplayDisplayGUI(GameplayController controller, WebsocketController wsController) {
        this.wsController = wsController;
        this.controller = controller;
        initComponents();
        settingLabel.setIcon((new javax.swing.ImageIcon("resources/SettingIcon.PNG")));

        playerTwoTable.add(new ScoreBar());
        scoreBarPanel.add(new ScoreBar());


        playerTwoTable.setBorder(javax.swing.BorderFactory.createMatteBorder(30, 30, 30, 30,
                new javax.swing.ImageIcon("resources/Table.PNG")));
        playerOneTable.setBorder(javax.swing.BorderFactory.createMatteBorder(30, 30, 30, 30,
                new javax.swing.ImageIcon("resources/Table.PNG")));
        deckCardBackground.setIcon(new javax.swing.ImageIcon("resources/back.png"));
        background.setIcon(new javax.swing.ImageIcon("resources/GamePlayBackground.PNG"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gamePlayPanel = new javax.swing.JPanel();
        trumpHoldChipPlayerOnePanel = new javax.swing.JPanel();
        buttonPanelPlayerOne = new javax.swing.JPanel();
        hitButtonPlayerOne = new javax.swing.JButton();
        standButtonPlayerOne = new javax.swing.JButton();
        playerOneTable = new javax.swing.JPanel();
        playerTwoTable = new javax.swing.JPanel();
        trumpStatusPlayerTwoPanel = new javax.swing.JPanel();
        playerOneNamePanel = new javax.swing.JPanel();
        playerOneNameLabel = new javax.swing.JLabel();
        trumpStatusPlayerOnePanel = new javax.swing.JPanel();
        playerTwoNamePanel = new javax.swing.JPanel();
        playerTwoNameLabel = new javax.swing.JLabel();
        chatPanel = new javax.swing.JPanel();
        gameplayTextArea = new java.awt.TextArea();
        scoreGamePlayerOnePanel = new javax.swing.JPanel();
        scoreGamePlayerOneLabel = new javax.swing.JLabel();
        playerOneNameScoreLabel = new java.awt.Label();
        scoreGamePlayerTwoPanel = new javax.swing.JPanel();
        scoreGamePlayerTwoLabel = new javax.swing.JLabel();
        playerTwoNameScoreLabel = new java.awt.Label();
        vsPanel = new javax.swing.JPanel();
        vsLabel = new javax.swing.JLabel();
        trumpCardPanel = new javax.swing.JPanel();
        trumpCardLabel = new javax.swing.JLabel();
        buttonPanelPlayerTwo = new javax.swing.JPanel();
        scoreCardTwoLabel = new javax.swing.JLabel();
        showTurn = new javax.swing.JPanel();
        showPlayerTurnLabel = new javax.swing.JLabel();
        deckCardPanel = new javax.swing.JPanel();
        deckCardBackground = new javax.swing.JLabel();
        settingPanel = new javax.swing.JPanel();
        settingLabel = new javax.swing.JLabel();
        scoreBarPanel = new javax.swing.JPanel();
        scoreCardOneLabel = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        gamePlayPanel.setBackground(new java.awt.Color(204, 255, 153));
        gamePlayPanel.setMinimumSize(new java.awt.Dimension(1280, 800));
        gamePlayPanel.setPreferredSize(new java.awt.Dimension(1280, 800));
        gamePlayPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        trumpHoldChipPlayerOnePanel.setBackground(new java.awt.Color(0, 0, 0));
        gamePlayPanel.add(trumpHoldChipPlayerOnePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 250, 240));

        buttonPanelPlayerOne.setBackground(new java.awt.Color(153, 153, 153));
        buttonPanelPlayerOne.setForeground(new java.awt.Color(255, 255, 255));
        buttonPanelPlayerOne.setPreferredSize(new java.awt.Dimension(150, 200));

        hitButtonPlayerOne.setBackground(new java.awt.Color(0, 0, 0));
        hitButtonPlayerOne.setFont(new java.awt.Font("Book Antiqua", 1, 20)); // NOI18N
        hitButtonPlayerOne.setForeground(new java.awt.Color(255, 255, 255));
        hitButtonPlayerOne.setText("Hit");
        hitButtonPlayerOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitButtonPlayerOneActionPerformed(evt);
            }
        });

        standButtonPlayerOne.setBackground(new java.awt.Color(255, 0, 0));
        standButtonPlayerOne.setFont(new java.awt.Font("Book Antiqua", 1, 20)); // NOI18N
        standButtonPlayerOne.setForeground(new java.awt.Color(255, 255, 0));
        standButtonPlayerOne.setText("Stand");
        standButtonPlayerOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standButtonPlayerOneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelPlayerOneLayout = new javax.swing.GroupLayout(buttonPanelPlayerOne);
        buttonPanelPlayerOne.setLayout(buttonPanelPlayerOneLayout);
        buttonPanelPlayerOneLayout.setHorizontalGroup(
                buttonPanelPlayerOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelPlayerOneLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(buttonPanelPlayerOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(hitButtonPlayerOne, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(standButtonPlayerOne, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(28, Short.MAX_VALUE))
        );
        buttonPanelPlayerOneLayout.setVerticalGroup(
                buttonPanelPlayerOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(buttonPanelPlayerOneLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(hitButtonPlayerOne, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(standButtonPlayerOne, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(14, Short.MAX_VALUE))
        );

        gamePlayPanel.add(buttonPanelPlayerOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 520, 156, 130));

        playerOneTable.setBackground(new java.awt.Color(102, 0, 0));
        gamePlayPanel.add(playerOneTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 520, 730, 240));

        playerTwoTable.setBackground(new java.awt.Color(102, 0, 0));
        playerTwoTable.setBorder(new javax.swing.border.MatteBorder(null));
        playerTwoTable.setPreferredSize(new java.awt.Dimension(720, 330));
        gamePlayPanel.add(playerTwoTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 730, 240));

        trumpStatusPlayerTwoPanel.setBackground(new java.awt.Color(51, 51, 51));
        gamePlayPanel.add(trumpStatusPlayerTwoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 260, 600, 70));

        playerOneNamePanel.setBackground(new java.awt.Color(102, 102, 102));

        playerOneNameLabel.setFont(new java.awt.Font("Book Antiqua", 1, 24)); // NOI18N
        playerOneNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        playerOneNameLabel.setPreferredSize(new java.awt.Dimension(250, 90));
        playerOneNamePanel.add(playerOneNameLabel);

        gamePlayPanel.add(playerOneNamePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 250, 90));

        trumpStatusPlayerOnePanel.setBackground(new java.awt.Color(51, 51, 51));
        trumpStatusPlayerOnePanel.setAutoscrolls(true);
        gamePlayPanel.add(trumpStatusPlayerOnePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 440, 600, 70));

        playerTwoNamePanel.setBackground(new java.awt.Color(102, 102, 102));

        playerTwoNameLabel.setFont(new java.awt.Font("Book Antiqua", 1, 24)); // NOI18N
        playerTwoNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        playerTwoNameLabel.setPreferredSize(new java.awt.Dimension(250, 90));
        playerTwoNamePanel.add(playerTwoNameLabel);

        gamePlayPanel.add(playerTwoNamePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 250, 90));

        chatPanel.setBackground(new java.awt.Color(51, 51, 51));

        gameplayTextArea.setBackground(new java.awt.Color(51, 51, 51));
        gameplayTextArea.setEditable(false);
        gameplayTextArea.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout chatPanelLayout = new javax.swing.GroupLayout(chatPanel);
        chatPanel.setLayout(chatPanelLayout);
        chatPanelLayout.setHorizontalGroup(
                chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chatPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(gameplayTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        chatPanelLayout.setVerticalGroup(
                chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(gameplayTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );

        gamePlayPanel.add(chatPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 250, 250));

        scoreGamePlayerOneLabel.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        scoreGamePlayerOneLabel.setText("0");

        playerOneNameScoreLabel.setAlignment(java.awt.Label.CENTER);
        playerOneNameScoreLabel.setBackground(new java.awt.Color(0, 0, 0));
        playerOneNameScoreLabel.setFont(new java.awt.Font("Book Antiqua", 1, 26)); // NOI18N
        playerOneNameScoreLabel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout scoreGamePlayerOnePanelLayout = new javax.swing.GroupLayout(scoreGamePlayerOnePanel);
        scoreGamePlayerOnePanel.setLayout(scoreGamePlayerOnePanelLayout);
        scoreGamePlayerOnePanelLayout.setHorizontalGroup(
                scoreGamePlayerOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scoreGamePlayerOnePanelLayout.createSequentialGroup()
                                .addComponent(playerOneNameScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(scoreGamePlayerOneLabel)
                                .addContainerGap())
        );
        scoreGamePlayerOnePanelLayout.setVerticalGroup(
                scoreGamePlayerOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(scoreGamePlayerOneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(scoreGamePlayerOnePanelLayout.createSequentialGroup()
                                .addComponent(playerOneNameScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        gamePlayPanel.add(scoreGamePlayerOnePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 340, 80));

        scoreGamePlayerTwoLabel.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        scoreGamePlayerTwoLabel.setText("0");

        playerTwoNameScoreLabel.setAlignment(java.awt.Label.CENTER);
        playerTwoNameScoreLabel.setBackground(new java.awt.Color(0, 0, 0));
        playerTwoNameScoreLabel.setFont(new java.awt.Font("Book Antiqua", 1, 26)); // NOI18N
        playerTwoNameScoreLabel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout scoreGamePlayerTwoPanelLayout = new javax.swing.GroupLayout(scoreGamePlayerTwoPanel);
        scoreGamePlayerTwoPanel.setLayout(scoreGamePlayerTwoPanelLayout);
        scoreGamePlayerTwoPanelLayout.setHorizontalGroup(
                scoreGamePlayerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(scoreGamePlayerTwoPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scoreGamePlayerTwoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(playerTwoNameScoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
        );
        scoreGamePlayerTwoPanelLayout.setVerticalGroup(
                scoreGamePlayerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(scoreGamePlayerTwoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .addComponent(playerTwoNameScoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        gamePlayPanel.add(scoreGamePlayerTwoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 340, 330, 80));

        vsPanel.setBackground(new java.awt.Color(0, 0, 0));
        vsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vsLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        vsLabel.setForeground(new java.awt.Color(255, 255, 255));
        vsLabel.setText("VS");
        vsPanel.add(vsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 60));

        gamePlayPanel.add(vsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 350, 70, 60));

        trumpCardPanel.setBackground(new java.awt.Color(255, 204, 0));

        trumpCardLabel.setFont(new java.awt.Font("Book Antiqua", 1, 24)); // NOI18N
        trumpCardLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        trumpCardLabel.setText("TrumpCard");
        trumpCardLabel.setPreferredSize(new java.awt.Dimension(250, 30));

        javax.swing.GroupLayout trumpCardPanelLayout = new javax.swing.GroupLayout(trumpCardPanel);
        trumpCardPanel.setLayout(trumpCardPanelLayout);
        trumpCardPanelLayout.setHorizontalGroup(
                trumpCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(trumpCardPanelLayout.createSequentialGroup()
                                .addComponent(trumpCardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        trumpCardPanelLayout.setVerticalGroup(
                trumpCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(trumpCardPanelLayout.createSequentialGroup()
                                .addComponent(trumpCardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        gamePlayPanel.add(trumpCardPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 250, 30));

        buttonPanelPlayerTwo.setBackground(new java.awt.Color(153, 153, 153));

        scoreCardTwoLabel.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        scoreCardTwoLabel.setForeground(new java.awt.Color(255, 255, 255));
        scoreCardTwoLabel.setText("Score : ");

        javax.swing.GroupLayout buttonPanelPlayerTwoLayout = new javax.swing.GroupLayout(buttonPanelPlayerTwo);
        buttonPanelPlayerTwo.setLayout(buttonPanelPlayerTwoLayout);
        buttonPanelPlayerTwoLayout.setHorizontalGroup(
                buttonPanelPlayerTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelPlayerTwoLayout.createSequentialGroup()
                                .addGap(0, 32, Short.MAX_VALUE)
                                .addComponent(scoreCardTwoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        buttonPanelPlayerTwoLayout.setVerticalGroup(
                buttonPanelPlayerTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(buttonPanelPlayerTwoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scoreCardTwoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gamePlayPanel.add(buttonPanelPlayerTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 80, 160, 60));

        showTurn.setBackground(new java.awt.Color(255, 153, 0));

        showPlayerTurnLabel.setFont(new java.awt.Font("Book Antiqua", 1, 36)); // NOI18N
        showPlayerTurnLabel.setForeground(new java.awt.Color(255, 0, 0));
        showPlayerTurnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        showPlayerTurnLabel.setText("Waiting...");
        showPlayerTurnLabel.setPreferredSize(new java.awt.Dimension(200, 90));

        javax.swing.GroupLayout showTurnLayout = new javax.swing.GroupLayout(showTurn);
        showTurn.setLayout(showTurnLayout);
        showTurnLayout.setHorizontalGroup(
                showTurnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showTurnLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(showPlayerTurnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        showTurnLayout.setVerticalGroup(
                showTurnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showTurnLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(showPlayerTurnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gamePlayPanel.add(showTurn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 160, 200, 90));

        deckCardPanel.setPreferredSize(new java.awt.Dimension(107, 157));

        javax.swing.GroupLayout deckCardPanelLayout = new javax.swing.GroupLayout(deckCardPanel);
        deckCardPanel.setLayout(deckCardPanelLayout);
        deckCardPanelLayout.setHorizontalGroup(
                deckCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deckCardPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(deckCardBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        deckCardPanelLayout.setVerticalGroup(
                deckCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deckCardPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(deckCardBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gamePlayPanel.add(deckCardPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 280, 150, 210));

        settingPanel.setBackground(new java.awt.Color(0, 102, 0));

        settingLabel.setBackground(new java.awt.Color(0, 102, 0));
        settingLabel.setPreferredSize(new java.awt.Dimension(40, 40));
        settingLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout settingPanelLayout = new javax.swing.GroupLayout(settingPanel);
        settingPanel.setLayout(settingPanelLayout);
        settingPanelLayout.setHorizontalGroup(
                settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(settingPanelLayout.createSequentialGroup()
                                .addComponent(settingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        settingPanelLayout.setVerticalGroup(
                settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(settingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gamePlayPanel.add(settingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 20, 40, 40));

        scoreBarPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        gamePlayPanel.add(scoreBarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1095, 710, 160, 30));
        scoreBarPanel.getAccessibleContext().setAccessibleName("");
        scoreBarPanel.getAccessibleContext().setAccessibleDescription("");

        scoreCardOneLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        scoreCardOneLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreCardOneLabel.setText("0 / 21");
        scoreCardOneLabel.setPreferredSize(new java.awt.Dimension(150, 100));
        gamePlayPanel.add(scoreCardOneLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 670, 122, 40));
        gamePlayPanel.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 800));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(gamePlayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(gamePlayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hitButtonPlayerOneActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_hitButtonPlayerOneActionPerformed
        wsController.sendHit();
    }// GEN-LAST:event_hitButtonPlayerOneActionPerformed

    private void standButtonPlayerOneActionPerformed(java.awt.event.ActionEvent evt) {
        wsController.sendStand();
    }


    private void settingLabelMouseClicked(MouseEvent evt) {
        controller.showSoundSettings();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JPanel buttonPanelPlayerOne;
    private javax.swing.JPanel buttonPanelPlayerTwo;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JLabel deckCardBackground;
    private javax.swing.JPanel deckCardPanel;
    private javax.swing.JPanel gamePlayPanel;
    private java.awt.TextArea gameplayTextArea;
    private javax.swing.JButton hitButtonPlayerOne;
    private javax.swing.JLabel playerOneNameLabel;
    private javax.swing.JPanel playerOneNamePanel;
    private java.awt.Label playerOneNameScoreLabel;
    private javax.swing.JPanel playerOneTable;
    private javax.swing.JLabel playerTwoNameLabel;
    private javax.swing.JPanel playerTwoNamePanel;
    private java.awt.Label playerTwoNameScoreLabel;
    private javax.swing.JPanel playerTwoTable;
    private javax.swing.JPanel scoreBarPanel;
    private javax.swing.JLabel scoreCardOneLabel;
    private javax.swing.JLabel scoreCardTwoLabel;
    private javax.swing.JLabel scoreGamePlayerOneLabel;
    private javax.swing.JPanel scoreGamePlayerOnePanel;
    private javax.swing.JLabel scoreGamePlayerTwoLabel;
    private javax.swing.JPanel scoreGamePlayerTwoPanel;
    private javax.swing.JLabel settingLabel;
    private javax.swing.JPanel settingPanel;
    private javax.swing.JLabel showPlayerTurnLabel;
    private javax.swing.JPanel showTurn;
    private javax.swing.JButton standButtonPlayerOne;
    private javax.swing.JLabel trumpCardLabel;
    private javax.swing.JPanel trumpCardPanel;
    private javax.swing.JPanel trumpHoldChipPlayerOnePanel;
    private javax.swing.JPanel trumpStatusPlayerOnePanel;
    private javax.swing.JPanel trumpStatusPlayerTwoPanel;
    private javax.swing.JLabel vsLabel;
    private javax.swing.JPanel vsPanel;
    // End of variables declaration//GEN-END:variables

    public Object getGetDeckCardPanel() {
        return getDeckCardPanel;
    }

    public void setGetDeckCardPanel(Object getDeckCardPanel) {
        this.getDeckCardPanel = getDeckCardPanel;
    }

    public JPanel getButtonPanelPlayerOne() {
        return buttonPanelPlayerOne;
    }

    public void setButtonPanelPlayerOne(JPanel buttonPanelPlayerOne) {
        this.buttonPanelPlayerOne = buttonPanelPlayerOne;
    }

    public JPanel getButtonPanelPlayerTwo() {
        return buttonPanelPlayerTwo;
    }

    public void setButtonPanelPlayerTwo(JPanel buttonPanelPlayerTwo) {
        this.buttonPanelPlayerTwo = buttonPanelPlayerTwo;
    }

    public JPanel getDeckCardPanel() {
        return deckCardPanel;
    }

    public void setDeckCardPanel(JPanel deckCardPanel) {
        this.deckCardPanel = deckCardPanel;
    }

    public JPanel getGamePlayPanel() {
        return gamePlayPanel;
    }

    public void setGamePlayPanel(JPanel gamePlayPanel) {
        this.gamePlayPanel = gamePlayPanel;
    }

    public JButton getHitButtonPlayerOne() {
        return hitButtonPlayerOne;
    }

    public void setHitButtonPlayerOne(JButton hitButtonPlayerOne) {
        this.hitButtonPlayerOne = hitButtonPlayerOne;
    }

    public JPanel getPlayerOneNamePanel() {
        return playerOneNamePanel;
    }

    public void setPlayerOneNamePanel(JPanel playerOneNamePanel) {
        this.playerOneNamePanel = playerOneNamePanel;
    }

    public Label getPlayerOneNameScoreLabel() {
        return playerOneNameScoreLabel;
    }

    public void setPlayerOneNameScoreLabel(Label playerOneNameScoreLabel) {
        this.playerOneNameScoreLabel = playerOneNameScoreLabel;
    }

    public JPanel getPlayerOneTable() {
        return playerOneTable;
    }

    public void setPlayerOneTable(JPanel playerOneTable) {
        this.playerOneTable = playerOneTable;
    }

    public JPanel getPlayerTwoNamePanel() {
        return playerTwoNamePanel;
    }

    public void setPlayerTwoNamePanel(JPanel playerTwoNamePanel) {
        this.playerTwoNamePanel = playerTwoNamePanel;
    }

    public Label getPlayerTwoNameScoreLabel() {
        return playerTwoNameScoreLabel;
    }

    public void setPlayerTwoNameScoreLabel(Label playerTwoNameScoreLabel) {
        this.playerTwoNameScoreLabel = playerTwoNameScoreLabel;
    }

    public JPanel getPlayerTwoTable() {
        return playerTwoTable;
    }

    public void setPlayerTwoTable(JPanel playerTwoTable) {
        this.playerTwoTable = playerTwoTable;
    }

    public JLabel getScoreCardOneLabel() {
        return scoreCardOneLabel;
    }

    public void setScoreCardOneLabel(JLabel scoreCardOneLabel) {
        this.scoreCardOneLabel = scoreCardOneLabel;
    }

    public JLabel getScoreCardTwoLabel() {
        return scoreCardTwoLabel;
    }

    public void setScoreCardTwoLabel(JLabel scoreCardTwoLabel) {
        this.scoreCardTwoLabel = scoreCardTwoLabel;
    }

    public JLabel getScoreGamePlayerOneLabel() {
        return scoreGamePlayerOneLabel;
    }

    public void setScoreGamePlayerOneLabel(JLabel scoreGamePlayerOneLabel) {
        this.scoreGamePlayerOneLabel = scoreGamePlayerOneLabel;
    }

    public JPanel getScoreGamePlayerOnePanel() {
        return scoreGamePlayerOnePanel;
    }

    public void setScoreGamePlayerOnePanel(JPanel scoreGamePlayerOnePanel) {
        this.scoreGamePlayerOnePanel = scoreGamePlayerOnePanel;
    }

    public JLabel getScoreGamePlayerTwoLabel() {
        return scoreGamePlayerTwoLabel;
    }

    public void setScoreGamePlayerTwoLabel(JLabel scoreGamePlayerTwoLabel) {
        this.scoreGamePlayerTwoLabel = scoreGamePlayerTwoLabel;
    }

    public JPanel getScoreGamePlayerTwoPanel() {
        return scoreGamePlayerTwoPanel;
    }

    public void setScoreGamePlayerTwoPanel(JPanel scoreGamePlayerTwoPanel) {
        this.scoreGamePlayerTwoPanel = scoreGamePlayerTwoPanel;
    }

    public JButton getStandButtonPlayerOne() {
        return standButtonPlayerOne;
    }

    public void setStandButtonPlayerOne(JButton standButtonPlayerOne) {
        this.standButtonPlayerOne = standButtonPlayerOne;
    }

    public JPanel getTrumpChipPlayerOnePanel() {
        return trumpStatusPlayerOnePanel;
    }

    public void setTrumpChipPlayerOnePanel(JPanel trumpChipPlayerOnePanel) {
        this.trumpStatusPlayerOnePanel = trumpChipPlayerOnePanel;
    }

    public JPanel getTrumpChipPlayerTwoPanel() {
        return trumpStatusPlayerTwoPanel;
    }

    public void setTrumpChipPlayerTwoPanel(JPanel trumpChipPlayerTwoPanel) {
        this.trumpStatusPlayerTwoPanel = trumpChipPlayerTwoPanel;
    }

    public JPanel getTrumpHoldChipPlayerOnePanel() {
        return trumpHoldChipPlayerOnePanel;
    }

    public void setTrumpHoldChipPlayerOnePanel(JPanel trumpHoldChipPlayerOnePanel) {
        this.trumpHoldChipPlayerOnePanel = trumpHoldChipPlayerOnePanel;
    }

    public JLabel getDeckCardBackground() {
        return deckCardBackground;
    }

    public void setDeckCardBackground(JLabel deckCardBackground) {
        this.deckCardBackground = deckCardBackground;
    }

    public JPanel getChatPanel() {
        return chatPanel;
    }

    public void setChatPanel(JPanel chatPanel) {
        this.chatPanel = chatPanel;
    }

    public TextArea getGameplayTextArea() {
        return gameplayTextArea;
    }

    public void setGameplayTextArea(TextArea gameplayTextArea) {
        this.gameplayTextArea = gameplayTextArea;
    }


    public JLabel getSoundControlMuteLabel() {
        return settingLabel;
    }

    public void setSoundControlMuteLabel(JLabel soundControlMuteLabel) {
        this.settingLabel = soundControlMuteLabel;
    }


    @Override
    public void onSwitch() {
        // REMOVE LATER
//        wsController.dev_trumpCheat();

//        controller.updateScoreBar(scoreBarPanel);
        playerOneNameLabel.setText(GameContext.getInstance().getPlayers()[0].getPOJO().getUsername());
        playerOneNameScoreLabel.setText(GameContext.getInstance().getPlayers()[0].getPOJO().getUsername());
        playerTwoNameLabel.setText(GameContext.getInstance().getPlayers()[1].getPOJO().getUsername());
        playerTwoNameScoreLabel.setText(GameContext.getInstance().getPlayers()[1].getPOJO().getUsername());
    }

    @Override
    public void onUpdate() {
        controller.updateStatusButton();
        controller.showCard(playerOneTable, scoreCardOneLabel, GameContext.getInstance().getPlayers()[0].getPOJO());
        controller.showCard(playerTwoTable, scoreCardTwoLabel, GameContext.getInstance().getPlayers()[1].getPOJO());
        controller.showTrumpCard(trumpHoldChipPlayerOnePanel, GameContext.getInstance().getPlayers()[0].getPOJO());
        controller.updateTitleGamePlay();
//        controller.updateScoreBar(scoreBarPanel);
        controller.updatePlayerScore();
        controller.updateCardScoreColor(scoreCardOneLabel, GameContext.getInstance().getPlayers()[0].getPOJO());
        controller.showTurn(showPlayerTurnLabel, showTurn);
        controller.showStatus(trumpStatusPlayerOnePanel, GameContext.getInstance().getPlayers()[0].getPOJO());
        controller.showStatus(trumpStatusPlayerTwoPanel, GameContext.getInstance().getPlayers()[1].getPOJO());
    }
}
